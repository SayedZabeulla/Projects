// seed.js
const { MongoClient, ObjectId } = require('mongodb');

// --- IMPORTANT ---
// Replace the placeholder URI with your actual MongoDB Atlas connection string.
// Make sure to replace <username> and <password> with your database user credentials.
const uri = "mongodb+srv://projectSDGOwner:%40321_SdgNm%237@projectsdgcluster.q2hep0w.mongodb.net/?retryWrites=true&w=majority&appName=projectSDGCluster";
// -----------------

const client = new MongoClient(uri);

// Sample data for our collections
const users = [
    {
        _id: new ObjectId(),
        fullName: "Sayed Zabiulla",
        grade: 7,
        languagePreference: "english",
        // In a real app, passwords should be securely hashed
        password: "hashed_password_syed", 
        createdAt: new Date()
    },
    {
        _id: new ObjectId(),
        fullName: "CH Sairam",
        grade: 8,
        languagePreference: "kannada",
        password: "hashed_password_sai",
        createdAt: new Date()
    }
];

const modules = [
    {
        _id: new ObjectId(),
        subject: "Science",
        grade: 8,
        chapter: "Cell Structure and Functions",
        title: "The Cell Membrane",
        content_en: "The cell membrane, or plasma membrane, is a biological membrane that separates the interior of all cells from the outside environment. It is selectively permeable.",
        content_kn: "‡≤ï‡≥ã‡≤∂ ‡≤™‡≥ä‡≤∞‡≥Ü‡≤Ø‡≥Å, ‡≤Ö‡≤•‡≤µ‡≤æ ‡≤™‡≥ç‡≤≤‡≤æ‡≤∏‡≥ç‡≤Æ‡≤æ ‡≤™‡≥ä‡≤∞‡≥Ü‡≤Ø‡≥Å, ‡≤é‡≤≤‡≥ç‡≤≤‡≤æ ‡≤ï‡≥ã‡≤∂‡≤ó‡≤≥ ‡≤í‡≤≥‡≤≠‡≤æ‡≤ó‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤π‡≥ä‡≤∞‡≤ó‡≤ø‡≤® ‡≤™‡≤∞‡≤ø‡≤∏‡≤∞‡≤¶‡≤ø‡≤Ç‡≤¶ ‡≤¨‡≥á‡≤∞‡≥ç‡≤™‡≤°‡≤ø‡≤∏‡≥Å‡≤µ ‡≤í‡≤Ç‡≤¶‡≥Å ‡≤ú‡≥à‡≤µ‡≤ø‡≤ï ‡≤™‡≥ä‡≤∞‡≥Ü‡≤Ø‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü. ‡≤á‡≤¶‡≥Å ‡≤Ü‡≤Ø‡≥ç‡≤¶‡≥Å‡≤ï‡≥ä‡≤Ç‡≤°‡≥Å ‡≤™‡≥ç‡≤∞‡≤µ‡≥á‡≤∂‡≤∏‡≤æ‡≤ß‡≥ç‡≤Ø‡≤µ‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü.",
        imageUrl: "/images/cell_membrane.png"
    },
    {
        _id: new ObjectId(),
        subject: "Science",
        grade: 8,
        chapter: "Cell Structure and Functions",
        title: "Mitochondria: Powerhouse of the Cell",
        content_en: "Mitochondria are membrane-bound cell organelles that generate most of the chemical energy needed to power the cell's biochemical reactions.",
        content_kn: "‡≤Æ‡≥à‡≤ü‡≥ä‡≤ï‡≤æ‡≤Ç‡≤°‡≥ç‡≤∞‡≤ø‡≤Ø‡≤æ‡≤ó‡≤≥‡≥Å ‡≤ï‡≥ã‡≤∂‡≤¶ ‡≤ú‡≥Ä‡≤µ‡≤∞‡≤æ‡≤∏‡≤æ‡≤Ø‡≤®‡≤ø‡≤ï ‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø‡≥Ü‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤¨‡≥á‡≤ï‡≤æ‡≤¶ ‡≤π‡≥Ü‡≤ö‡≥ç‡≤ö‡≤ø‡≤® ‡≤∞‡≤æ‡≤∏‡≤æ‡≤Ø‡≤®‡≤ø‡≤ï ‡≤∂‡≤ï‡≥ç‡≤§‡≤ø‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤â‡≤§‡≥ç‡≤™‡≤æ‡≤¶‡≤ø‡≤∏‡≥Å‡≤µ ‡≤™‡≥ä‡≤∞‡≥Ü‡≤Ø‡≤ø‡≤Ç‡≤¶ ‡≤ï‡≥Ç‡≤°‡≤ø‡≤¶ ‡≤ï‡≥ã‡≤∂ ‡≤Ö‡≤Ç‡≤ó‡≤ó‡≤≥‡≤æ‡≤ó‡≤ø‡≤µ‡≥Ü.",
        imageUrl: "/images/mitochondria.png"
    }
];

const quizzes = [
    // Quizzes for the "Cell Membrane" module
    {
        moduleId: modules[0]._id, // Links to the first module
        question_en: "What is the primary function of the cell membrane?",
        question_kn: "‡≤ï‡≥ã‡≤∂ ‡≤™‡≥ä‡≤∞‡≥Ü‡≤Ø ‡≤™‡≥ç‡≤∞‡≤æ‡≤•‡≤Æ‡≤ø‡≤ï ‡≤ï‡≤æ‡≤∞‡≥ç‡≤Ø‡≤µ‡≥á‡≤®‡≥Å?",
        options_en: ["Energy production", "Separation and protection", "Protein synthesis"],
        options_kn: ["‡≤∂‡≤ï‡≥ç‡≤§‡≤ø ‡≤â‡≤§‡≥ç‡≤™‡≤æ‡≤¶‡≤®‡≥Ü", "‡≤¨‡≥á‡≤∞‡≥ç‡≤™‡≤°‡≤ø‡≤∏‡≥Å‡≤µ‡≤ø‡≤ï‡≥Ü ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∞‡≤ï‡≥ç‡≤∑‡≤£‡≥Ü", "‡≤™‡≥ç‡≤∞‡≥ã‡≤ü‡≥Ä‡≤®‡≥ç ‡≤∏‡≤Ç‡≤∂‡≥ç‡≤≤‡≥á‡≤∑‡≤£‡≥Ü"],
        correctOptionIndex: 1
    },
    // Quizzes for the "Mitochondria" module
    {
        moduleId: modules[1]._id, // Links to the second module
        question_en: "Which organelle is known as the 'powerhouse of the cell'?",
        question_kn: "‡≤Ø‡≤æ‡≤µ ‡≤Ö‡≤Ç‡≤ó‡≤µ‡≤®‡≥ç‡≤®‡≥Å '‡≤ï‡≥ã‡≤∂‡≤¶ ‡≤∂‡≤ï‡≥ç‡≤§‡≤ø ‡≤ï‡≥á‡≤Ç‡≤¶‡≥ç‡≤∞' ‡≤é‡≤Ç‡≤¶‡≥Å ‡≤ï‡≤∞‡≥Ü‡≤Ø‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü?",
        options_en: ["Nucleus", "Ribosome", "Mitochondria"],
        options_kn: ["‡≤®‡≥ç‡≤Ø‡≥Ç‡≤ï‡≥ç‡≤≤‡≤ø‡≤Ø‡≤∏‡≥ç", "‡≤∞‡≥à‡≤¨‡≥ã‡≤∏‡≥ã‡≤Æ‡≥ç", "‡≤Æ‡≥à‡≤ü‡≥ä‡≤ï‡≤æ‡≤Ç‡≤°‡≥ç‡≤∞‡≤ø‡≤Ø‡≤æ"],
        correctOptionIndex: 2
    }
];

const userProgress = [
    {
        userId: users[0]._id, // Links to Syed
        moduleId: modules[0]._id, // Links to Cell Membrane module
        score: 1.0, // 100% correct
        status: "completed",
        lastAttemptedAt: new Date()
    }
];


async function run() {
    try {
        await client.connect();
        console.log("‚úÖ Successfully connected to MongoDB Atlas!");

        const database = client.db("JnanaDeepaDB"); // This will create the DB if it doesn't exist

        // Get collection handles
        const usersCollection = database.collection("users");
        const modulesCollection = database.collection("modules");
        const quizzesCollection = database.collection("quizzes");
        const userProgressCollection = database.collection("userProgress");
        
        // Clear existing data to prevent duplicates on re-run
        console.log("üßπ Clearing existing data...");
        await usersCollection.deleteMany({});
        await modulesCollection.deleteMany({});
        await quizzesCollection.deleteMany({});
        await userProgressCollection.deleteMany({});

        // Insert the new sample data
        console.log("üå± Inserting new sample data...");
        await usersCollection.insertMany(users);
        await modulesCollection.insertMany(modules);
        await quizzesCollection.insertMany(quizzes);
        await userProgressCollection.insertMany(userProgress);

        console.log("üöÄ Database has been successfully seeded!");

    } catch (error) {
        console.error("‚ùå An error occurred:", error);
    } finally {
        // Ensures that the client will close when you finish/error
        await client.close();
        console.log("üîå Connection closed.");
    }
}

run().catch(console.dir);